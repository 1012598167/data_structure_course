<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CMakeRunConfigurationManager" shouldGenerate="true" shouldDeleteObsolete="true" buildAllGenerated="true">
    <generated>
      <config projectName="qizhongdier" targetName="qizhongdier" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug" CONFIG_NAME="Debug" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="12b0228f-4cdb-4b24-94a2-3db68bf6209c" name="Default Changelist" comment="" />
    <ignored path="$PROJECT_DIR$/cmake-build-debug/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug" />
  <component name="FUSProjectUsageTrigger">
    <session id="-1340138983">
      <usages-collector id="statistics.lifecycle.project">
        <counts>
          <entry key="project.closed" value="1" />
          <entry key="project.open.time.0" value="1" />
          <entry key="project.opened" value="1" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.extensions.open">
        <counts>
          <entry key="cpp" value="1" />
          <entry key="h" value="4" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.open">
        <counts>
          <entry key="ObjectiveC" value="5" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.extensions.edit">
        <counts>
          <entry key="cpp" value="678" />
          <entry key="h" value="26" />
          <entry key="mm" value="17" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.edit">
        <counts>
          <entry key="ObjectiveC" value="721" />
        </counts>
      </usages-collector>
    </session>
  </component>
  <component name="FileEditorManager">
    <leaf>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/CMakeLists.txt">
          <provider selected="true" editor-type-id="text-editor" />
        </entry>
      </file>
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/main.cpp">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="546">
              <caret line="76" column="36" selection-start-line="76" selection-start-column="36" selection-end-line="76" selection-end-column="36" />
              <folding>
                <element signature="e#0#19#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/Stack.cpp">
          <provider selected="true" editor-type-id="text-editor" />
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/Stack.h">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="756">
              <caret line="37" column="17" selection-start-line="37" selection-start-column="17" selection-end-line="37" selection-end-column="17" />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/Stack.h" />
        <option value="$PROJECT_DIR$/main.cpp" />
      </list>
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="252" />
    <option name="y" value="19" />
    <option name="width" value="1400" />
    <option name="height" value="1000" />
  </component>
  <component name="ProjectInspectionProfilesVisibleTreeState">
    <entry key="Project Default">
      <profile-state />
    </entry>
  </component>
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="Scope" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="qizhongdier" type="b2602c69:ProjectViewProjectNode" />
              <item name="qizhongdier" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="settings.editor.selected.configurable" value="CPPToolchains" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Application.qizhongdier">
    <configuration name="Build All" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="qizhongdier" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="qizhongdier" TARGET_NAME="qizhongdier" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="qizhongdier" RUN_TARGET_NAME="qizhongdier">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Application.Build All" />
      <item itemvalue="Application.qizhongdier" />
    </list>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="12b0228f-4cdb-4b24-94a2-3db68bf6209c" name="Default Changelist" comment="" />
      <created>1542607106090</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1542607106090</updated>
      <workItem from="1542607107283" duration="4574000" />
    </task>
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="4574000" />
  </component>
  <component name="ToolWindowManager">
    <frame x="-8" y="-8" width="1936" height="1056" extended-state="6" />
    <layout>
      <window_info id="Favorites" side_tool="true" />
      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.25" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info anchor="bottom" id="Database Changes" show_stripe_button="false" />
      <window_info anchor="bottom" id="Version Control" show_stripe_button="false" />
      <window_info anchor="bottom" id="Messages" weight="0.32936078" />
      <window_info anchor="bottom" id="Terminal" />
      <window_info anchor="bottom" id="Event Log" side_tool="true" />
      <window_info anchor="bottom" id="CMake" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" />
      <window_info anchor="bottom" id="Run" order="2" weight="0.32936078" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.3997833" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="right" id="Database" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/main.cpp</url>
          <line>15</line>
          <option name="timeStamp" value="5" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="debuggerHistoryManager">
    <expressions id="watch">
      <expression>
        <expression-string>stack

class MyIntStack
{
public:
    MyIntStack(int &amp;n);
    ~MyIntStack();
    bool empty() const;
    bool full() const;
    int push(const Stack_entry &amp;item);
    int pop();
    int top(Stack_entry &amp;item) const;
    int getMin() const;
private:
    int count;
    int maxstack;
    Stack_entry *entry;
};


#endif //FORMAL_MIDTERM_MYINTSTACK_MYINTSTACK_H
MyIntStack::MyIntStack(int &amp;n)
{
    maxstack=n;
    entry=new Stack_entry[n];
    count=0;
}

MyIntStack::~MyIntStack()
{
    delete [] entry;
}

bool MyIntStack::empty() const
{
    return (count == 0);
}

bool MyIntStack::full() const
{
    return (count == maxstack-1);
}

int MyIntStack::push(const Stack_entry &amp;item)
{
    if (full())
        return 0;
    entry[count]=item;
    count=((count+1)==maxstack)?0:(count+1);
    return 1;
}


int MyIntStack::pop()
{
    if(empty())
        return -1;
    Stack_entry c;
    top(c);
    count=((count-1)==-1)?(maxstack-1):(count-1);
    return c;
}

int MyIntStack::top(Stack_entry &amp;item) const
{
    if(empty())
        return 0;
    item=entry[count-1];
    return 1;
}

int MyIntStack::getMin() const
{
    int item;
    if(empty())
        return -1;
    int min=entry[0];
    for (int i = 0; i &lt; count-1; i++)
    {
        min=(entry[i+1]&lt;min)?entry[i+1]:min;
    }
    item=min;
    return item;


class MyIntStack
{
public:
    MyIntStack(int &amp;n);
    ~MyIntStack();
    bool empty() const;
    bool full() const;
    int push(const Stack_entry &amp;item);
    int pop();
    int top(Stack_entry &amp;item) const;
    int getMin() const;
private:
    int count;
    int maxstack;
    Stack_entry *entry;
};


#endif //FORMAL_MIDTERM_MYINTSTACK_MYINTSTACK_H
MyIntStack::MyIntStack(int &amp;n)
{
    maxstack=n;
    entry=new Stack_entry[n];
    count=0;
}

MyIntStack::~MyIntStack()
{
    delete [] entry;
}

bool MyIntStack::empty() const
{
    return (count == 0);
}

bool MyIntStack::full() const
{
    return (count == maxstack-1);
}

int MyIntStack::push(const Stack_entry &amp;item)
{
    if (full())
        return 0;
    entry[count]=item;
    count=((count+1)==maxstack)?0:(count+1);
    return 1;
}


int MyIntStack::pop()
{
    if(empty())
        return -1;
    Stack_entry c;
    top(c);
    count=((count-1)==-1)?(maxstack-1):(count-1);
    return c;
}

int MyIntStack::top(Stack_entry &amp;item) const
{
    if(empty())
        return 0;
    item=entry[count-1];
    return 1;
}

int MyIntStack::getMin() const
{
    int item;
    if(empty())
        return -1;
    int min=entry[0];
    for (int i = 0; i &lt; count-1; i++)
    {
        min=(entry[i+1]&lt;min)?entry[i+1]:min;
    }
    item=min;
    return item;
}</expression-string>
        <language-id>ObjectiveC</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
    </expressions>
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/CMakeLists.txt">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/Stack.cpp">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://F:/ruanjian/mingw/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/bits/basic_string.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="256">
          <caret line="6019" selection-start-line="6019" selection-end-line="6019" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Stack.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="756">
          <caret line="37" column="17" selection-start-line="37" selection-start-column="17" selection-end-line="37" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/main.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="546">
          <caret line="76" column="36" selection-start-line="76" selection-start-column="36" selection-end-line="76" selection-end-column="36" />
          <folding>
            <element signature="e#0#19#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
  </component>
</project>